class Solution {
public:
    bool searchMatrix(vector<vector<int>>& matrix, int target) {
        if(matrix.size()==0 || matrix[0].size()==0) {
            return false;
        }
        int row = matrix.size();
        int col = matrix[0].size();
        int m=0, n=col-1;
        while(m < row && n >= 0) {
            if(target==matrix[m][n]) {
                return true;
            } else if(target > matrix[m][n]) {
                m++;
            } else {
                n--;
            }
        }
        return false;
    }
};



public class Solution {
    public boolean searchMatrix(int[][] matrix, int target) {
        if(matrix==null || matrix.length==0) {
            return false;
        }
        if(matrix[0]==null || matrix[0].length==0) {
            return false;
        }
        int row = matrix.length;
        int col = matrix[0].length;
        int m=row-1, n=0;
        while(m>=0 && n<col) {
            if(target==matrix[m][n]) {
                return true;
            } else if(target > matrix[m][n]) {
                n++;
            } else {
                m--;
            }
        }
        return false;
    }
}
