class Solution {
public:
    int findMin(vector<int>& nums) {
        if(nums.size()==0) {
            return 0;
        }
        int start = 0, end = nums.size() -1;
        int target = nums[end];
        while(start +1 < end) {
            int mid = start + (end -start)/2;
            if(target > nums[mid]){
                end = mid;
            } else {
                start = mid;
            }
        }
        if(nums[start]<=target) {
            return nums[start];
        } else {
            return nums[end];
        } 
    }
};

public class Solution {
    public int findMin(int[] nums) {
        if(nums == null || nums.length==0) {
            return 0;
        }
        int start = 0, end = nums.length -1;
        int target = nums[end];
        while(start +1 < end) {
            int mid = start + (end -start)/2;
            if(target > nums[mid]){
                end = mid;
            } else {
                start = mid;
            }
        }
        if(nums[start]<=target) {
            return nums[start];
        } else {
            return nums[end];
        } 
        
    }
}
