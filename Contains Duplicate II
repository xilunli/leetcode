class Solution {
public:
    bool containsNearbyDuplicate(vector<int>& nums, int k) {
        int length = nums.size();
        if(length==0 | length==1) return false;
        map<int,int> myMap;
        for(int i=0; i<length; i++){
            if(myMap.count(nums[i])>0 && (i-myMap[nums[i]])<=k) return true;
            else myMap[nums[i]] = i;
        }
        return false;
    }
};


public class Solution {
    public boolean containsNearbyDuplicate(int[] nums, int k) {
        if (nums.length == 0 || nums.length == 1) return false;
        Map<Integer, Integer> myMap = new HashMap<Integer, Integer>();
        for(int i = 0; i < nums.length; i++) {
            if(myMap.containsKey(nums[i]) && (i-myMap.get(nums[i]))<=k) return true;
            else myMap.put(nums[i],i);
        }
        return false;
    }
}
