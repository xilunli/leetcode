class Solution {
public:
    bool containsDuplicate(vector<int>& nums) {
        if (nums.size()==0 || nums.size() == 1) return false;
        sort(nums.begin(), nums.end());
        for (int i = 0; i < nums.size()-1; ++i) {
            if (nums[i] == nums[i + 1]) return true;
        }
        return false;
    }
};

public class Solution {
    public boolean containsDuplicate(int[] nums) {
        if (nums.length == 0 || nums.length == 1) return false;
        Map<Integer, Integer> myMap = new HashMap<Integer, Integer>();
        for(int i = 0; i < nums.length; i++) {
            if(myMap.containsKey(nums[i])) return true;
            else myMap.put(nums[i],1);
        }
        return false;
    }
}
