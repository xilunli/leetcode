/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* deleteDuplicates(ListNode* head) {
        ListNode* dummy = new ListNode(0);
        dummy->next = head;
        ListNode* prev = dummy;
        while(head != NULL && head->next != NULL) {
            if(head->val == head->next->val) {
                int value = head->val;
                while(head != NULL && head->val == value) {
                    head = head->next;
                    prev->next = head;
                }
            } else {
                prev = head;
                head = head->next;
            }
        }
        head = dummy->next;
        delete dummy;
        return head;
    }
};



/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode deleteDuplicates(ListNode head) {
        ListNode dummy = new ListNode(0);
        dummy.next = head;
        ListNode prev = dummy;
        while(head != null && head.next != null) {
            if(head.next.val == head.val) {
                int val = head.val;
                while(head != null && head.val == val) {
                    head = head.next;
                    prev.next = head;
                }
            } else {
                prev = head;
                head = head.next;
            }
        }
        return dummy.next;
    }
}
