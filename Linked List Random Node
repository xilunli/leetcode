public:
    ListNode *head;
    /** @param head The linked list's head.
        Note that the head is guaranteed to be not null, so it contains at least one node. */
    Solution(ListNode* head) {
        this->head = head;
    }
    
    /** Returns a random node's value. */
    int getRandom() {
        int ans = 0, cnt=1;
        ListNode *p = head;
        while(p != NULL) {
            if(rand() % cnt == 0) {
                ans = p->val;
            }
            p = p->next;
            cnt++;
        }
        return ans;
    }
};




public class Solution {
    private ListNode head;
    private Random random;
    /** @param head The linked list's head.
        Note that the head is guaranteed to be not null, so it contains at least one node. */
    public Solution(ListNode head) {
        this.head = head;
        this.random = new Random();
    }
    
    /** Returns a random node's value. */
    public int getRandom() {
        int ans = 0, cnt = 1;
        ListNode p = head;
        while(p != null) {
            if(random.nextInt(cnt++)==0){
                ans = p.val;
            }
            p = p.next;
        }
        return ans;
    }
}
