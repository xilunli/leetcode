class Solution {
public:
    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {
        vector<int> ans;
        sort(nums1.begin(), nums1.end());
        sort(nums2.begin(), nums2.end());
        int i = 0, j = 0;
        while(i < nums1.size() && j < nums2.size()) {
            if(nums1[i] == nums2[j]) {
                ans.push_back(nums1[i]);
                i++;
                j++;
            } else if(nums1[i] < nums2[j]) {
                i++;
            } else {
                j++;
            }
        }
        return ans;
    }
};




public class Solution {
    public int[] intersect(int[] nums1, int[] nums2) {
        Map<Integer, Integer> myMap = new HashMap<Integer, Integer>();
        List<Integer> myList = new ArrayList<Integer>();
        for(int num: nums1) {
            if(myMap.containsKey(num)) {
                myMap.put(num, myMap.get(num) + 1);
            } else {
                myMap.put(num, 1);
            }
        }
        for(int num: nums2) {
            if(myMap.containsKey(num) && myMap.get(num) > 0) {
                myList.add(num);
                myMap.put(num, myMap.get(num)-1);
            }
        }
        int[] ans = new int[myList.size()];
        int i = 0;
        for(Integer num: myList) {
            ans[i++] = num;
        }
        return ans;
    }
}
