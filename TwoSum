class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        vector<int> ans;
        unordered_map<int, vector<int> > hashMap;
        for (int i = 0; i < nums.size(); i++) {
            hashMap[nums[i]].push_back(i);
        }
        for (int i = 0; i < nums.size(); i++) {
            int val = target - nums[i];
            if (hashMap.count(val) > 0) {
                if(val == nums[i] && hashMap[val].size() > 1) {
                    return {hashMap[val][0],hashMap[val][1]};
                } else if (val != nums[i]) {
                    return {i, hashMap[val][0]};
                }
            }
        }
        return ans;
}
};
