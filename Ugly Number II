class Solution {
public:
    int nthUglyNumber(int n) {
        if(n < 1) {
            return -1;
        }
        if(n == 1) {
            return 1;
        }
        vector<int> ans(n);
        ans[0] = 1;
        int p2 = 0, p3 = 0, p5 = 0;
        for(int i = 1; i < n; i++) {
            ans[i] = min(ans[p2]*2, min(ans[p3]*3, ans[p5]*5));
            if(ans[i] == ans[p2]*2) {
                p2++;
            }
            if(ans[i] == ans[p3]*3) {
                p3++;
            }
            if(ans[i] == ans[p5]*5) {
                p5++;
            }
        }
        return ans[n-1];
    }
};


public class Solution {
    public int nthUglyNumber(int n) {
        if(n < 1) {
            return -1;
        }
        if(n == 1) {
            return 1;
        }
        int[] ans = new int[n];
        ans[0] = 1;
        int p2 = 0, p3 = 0, p5 = 0;
        for(int i = 1; i < n; i++) {
            ans[i] = Math.min(ans[p2]*2, Math.min(ans[p3]*3, ans[p5]*5));
            if(ans[i] == ans[p2]*2) {
                p2++;
            }
            if(ans[i] == ans[p3]*3) {
                p3++;
            }
            if(ans[i] == ans[p5]*5) {
                p5++;
            }
        }
        return ans[n-1];
    }
}
