class Solution {
public:
    bool isPalindrome(string s) {
        if(s.length()==0) return true;
        int start=0, end=s.length()-1;
        while(start < end) {
            while(start<s.length() && !isValid(s[start])){
                start++;
            }
            if(start==s.length()){
                return true;
            }
            while(end>=0 && !isValid(s[end])){
                end--;
            }
            if(tolower(s[start]) != tolower(s[end])) {
                return false;
            } else {
                start++;
                end--;
            }
        }
        return true;
    }
    
    bool isValid (char c) {
        return isalpha(c) || isdigit(c);
    }
};



public class Solution {
    public boolean isPalindrome(String s) {
        if(s.trim().length()==0) return true;
        int start=0, end=s.length()-1;
        while(start < end) {
            while(start<s.length() && !isValid(s.charAt(start))){
                start++;
            }
            if(start==s.length()){
                return true;
            }
            while(end>=0 && !isValid(s.charAt(end))){
                end--;
            }
            if(Character.toLowerCase(s.charAt(start)) != Character.toLowerCase(s.charAt(end))) {
                return false;
            } else {
                start++;
                end--;
            }
        }
        return true;
    }
    
    private boolean isValid (char c) {
        return Character.isLetter(c) || Character.isDigit(c);
    }
}
