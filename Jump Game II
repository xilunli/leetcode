class Solution {
public:
    int jump(vector<int>& nums) {
        vector<int> ans(nums.size(), INT_MAX);
        ans[0] = 0;
        for(int i = 0; i < nums.size(); i++) {
            for(int j = 0; j < i; j++) {
                if(ans[j] < INT_MAX && nums[j] + j >= i) {
                    ans[i] = min(ans[j] + 1, ans[i]);
                }
            }
        }
        return ans[nums.size() - 1];
    }
};



public class Solution {
    public int jump(int[] nums) {
        if(nums == null || nums.length == 0) {
            return -1;
        }
        int start = 0, end = 0, steps = 0, tmpMax = 0;
        
        while(tmpMax < nums.length -1) {
            steps++;
            for(int i = start; i <= end; i++) {
                if(nums[i] + i > tmpMax) {
                    tmpMax = nums[i] + i;
                }
            }
            start = end + 1;
            end = tmpMax;
        }
        return steps;
    }
}
